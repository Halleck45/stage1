
'use strict';

module.exports = function(hipache, req, stack, next) {
    var project = req.headers.host.split(/\./)[1];
    var ip = req.connection.remoteAddress

    console.log('project: ' + project);
    console.log('ip: ' + ip);

    if (undefined === project) {
        console.log('no project detected, moving on');
        return next(); // next module
    }

    var auth_key = 'auth:' + project;
    var redis = hipache.cache.redisClient;

    console.log('checking auth for ' + project);

    redis.EXISTS(auth_key, function(err, exists) {
        if (err) {
            throw err;
        }

        if (exists) {
            console.log('project has auth activated, pushing middleware');
            stack.push(function(req, res, next) {
                redis.SISMEMBER(auth_key, ip, function(err, is_member) {
                    if (!is_member) {
                        console.log('sorry bobby, not this time')
                        // there HAS to be a better http status than that
                        res.writeHead(301, {
                            'Location': 'http://stage1/auth/' + project + '?return=' + encodeURIComponent(req.headers.host)
                        });
                        res.end();
                    } else {
                        next(); // next middleware
                    }

                });
            });
        } else {
            console.log('project does not have auth activated');
        }


        return next(); // next module
    });
}